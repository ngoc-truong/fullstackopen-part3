{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","search","onChange","handleSearchChange","PersonForm","onSubmit","add","name","handleNameChange","number","handleNumberChange","type","Persons","contactsToShow","map","person","key","id","onClick","deletePerson","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","url","delete","App","useState","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","persons","setPersons","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","filter","toLowerCase","includes","updatePerson","find","returnedPerson","newPersonsArray","catch","error","event","target","preventDefault","nameObject","some","window","confirm","concat","setTimeout","index","findIndex","personsCopy","splice","ReactDOM","render","document","getElementById"],"mappings":"mOAceA,EAZA,SAACC,GACZ,OACI,mDACuB,2BACCC,MAAOD,EAAME,OACbC,SAAUH,EAAMI,uBCejCC,EApBI,SAACL,GAChB,OACI,0BAAMM,SAAUN,EAAMO,KAClB,sCACU,2BACEN,MAAOD,EAAMQ,KACbL,SAAUH,EAAMS,oBAE5B,wCACY,2BACAR,MAAOD,EAAMU,OACbP,SAAUH,EAAMW,sBAE5B,6BACI,4BAAQC,KAAK,UAAb,UCFDC,EAZC,SAACb,GACb,OACI,6BACKA,EAAMc,eAAeC,KAAK,SAACC,GAAD,OACvB,yBAAKC,IAAKD,EAAOE,IACb,uBAAGD,IAAKD,EAAOE,IAAKF,EAAOR,KAA3B,KAAmCQ,EAAON,QAC1C,4BAAQS,QAAS,kBAAMnB,EAAMoB,aAAaJ,EAAOE,MAAjD,uBCMLG,EAZM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASV,EAAW,EAAXA,KAC7B,OAAgB,OAAZU,EACO,KAIP,yBAAKC,UAAWX,GACXU,I,gBCRPE,EAAU,oCAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACX,EAAIY,GAEhB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBN,GAAMY,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALE,SAACX,GACd,IAAMe,EAAG,UAAMT,EAAN,YAAiBN,GAC1B,OAAOO,IAAMS,OAAOD,IC8GTE,EA3HH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTC,EADS,KACAC,EADA,OAEkBF,mBAAS,IAF3B,mBAETG,EAFS,KAEEC,EAFF,OAGkBJ,mBAAS,IAH3B,mBAGTK,EAHS,KAGEC,EAHF,OAIcN,mBAAS,IAJvB,mBAITO,EAJS,KAIAC,EAJA,OAK4BR,mBAAS,MALrC,mBAKTS,EALS,KAKOC,EALP,OAMwBV,mBAAS,MANjC,mBAMTW,EANS,KAMKC,EANL,KAShBC,qBAAW,WACTC,IAEGvB,MAAK,SAAAwB,GACJP,EAAWO,QAEd,IAGH,IAaMrC,EAAiB6B,EAAQS,QAAQ,SAACpC,GAAD,OAAYA,EAAOR,KAAK6C,cAAcC,SAASb,EAAUY,kBA8B1FE,EAAe,SAACrC,EAAIY,GACxB,IAAMd,EAAS2B,EAAQa,MAAM,SAACxC,GAAD,OAAYA,EAAOE,KAAOA,KACvDgC,EACUlC,EAAOE,GAAIY,GAClBH,MAAM,SAAC8B,GACN,IAAMC,EAAkBf,EAAQ5B,KAAK,SAACC,GAAD,OAAYA,EAAOE,KAAOA,EAAKF,EAASyC,KAC7Eb,EAAWc,MAEZC,OAAO,SAACC,GACPZ,EAAgB,cAAD,OAAehC,EAAOR,KAAtB,0CACfoC,EAAWD,EAAQS,QAAQ,SAACpC,GAAD,OAAYA,EAAOE,KAAOA,UAwB3D,OACE,6BACE,yCACA,kBAAC,EAAD,CACEhB,OAAQuC,EACRrC,mBA1EqB,SAACyD,GAC1BnB,EAAamB,EAAMC,OAAO7D,UA4ExB,iDACA,kBAAC,EAAD,CAAcqB,QAASuB,EAAgBjC,KAAK,YAC5C,kBAAC,EAAD,CAAcU,QAASyB,EAAcnC,KAAK,UAC1C,kBAAC,EAAD,CACEL,IA1EY,SAACsD,GACjBA,EAAME,iBACN,IAAMC,EAAa,CACjBxD,KAAM6B,EACN3B,OAAQ6B,GAGV,GAAII,EAAQsB,MAAM,SAACjD,GAAD,OAAYA,EAAOR,OAAS6B,MAE5C,GAD0B6B,OAAOC,QAAP,UAAkB9B,EAAlB,6EACH,CACrB,IAAMrB,EAAS2B,EAAQa,MAAM,SAACxC,GAAD,OAAYA,EAAOR,OAAS6B,KACzDkB,EAAavC,EAAOE,GAAI8C,SAG1Bd,EACUc,GACPrC,MAAK,SAAA8B,GACJb,EAAWD,EAAQyB,OAAOX,IAC1BnB,EAAW,IACXE,EAAa,OAEjBM,EAAkB,GAAD,OAAIkB,EAAWxD,KAAf,6CACjB6D,YAAY,WACVvB,EAAkB,QACjB,MAmDDtC,KAAM6B,EACN3B,OAAQ6B,EACR9B,iBA5FmB,SAACoD,GACxBvB,EAAWuB,EAAMC,OAAO7D,QA4FpBU,mBAzFqB,SAACkD,GAC1BrB,EAAaqB,EAAMC,OAAO7D,UA2FxB,uCACA,kBAAC,EAAD,CACEa,eAAgBA,EAChBM,aAzCe,SAACF,GACpB,IAAMoD,EAAQ3B,EAAQ4B,WAAW,SAACvD,GAAD,OAAYA,EAAOE,KAAOA,KACrDF,EAAS2B,EAAQa,MAAM,SAACxC,GAAD,OAAYA,EAAOE,KAAOA,KAGvD,GAF0BgD,OAAOC,QAAP,uCAA+CnD,EAAOR,OAEhF,CACE,IAAMgE,EAAW,YAAQ7B,GACzB6B,EAAYC,OAAOH,EAAO,GAE1BpB,EACYhC,GACTS,MAAM,WACLiB,EAAW4B,YC1FrBE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.514b5a97.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = (props) => {\n    return (\n        <div>\n            Filter shown with: <input \n                                value={props.search}\n                                onChange={props.handleSearchChange}\n                                />\n        </div>\n    )\n\n}\n\nexport default Filter;","import React from \"react\";\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.add}>\n            <div>\n                Name: <input \n                        value={props.name}\n                        onChange={props.handleNameChange}/>\n            </div>\n            <div>\n                Number: <input \n                        value={props.number}\n                        onChange={props.handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">Add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm;","import React from \"react\";\n\nconst Persons = (props) => {\n    return(\n        <div>\n            {props.contactsToShow.map( (person) => \n                <div key={person.id}>\n                    <p key={person.id}>{person.name}: {person.number}</p>\n                    <button onClick={() => props.deletePerson(person.id)}>Delete Person</button>\n                </div>\n            )}\n        </div>\n    )\n}\nexport default Persons;","import React from \"react\";\n\nconst Notification = ( {message, type} ) => {\n    if (message === null) {\n        return null;\n    }\n\n    return (\n        <div className={type}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(response => response.data);\n}\n\nconst deleteIt = (id) => {\n    const url = `${baseUrl}/${id}`; \n    return axios.delete(url);\n}\n\nexport default { getAll, create, update, deleteIt };","import React, {useState, useEffect} from 'react';\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\nimport personService from \"./services/persons\";\n\nconst App = () => {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newSearch, setNewSearch] = useState(\"\");\n  const [persons, setPersons] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Populate data after rendering for the first time.\n  useEffect( () => {\n    personService \n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons);\n      })\n  }, []);\n\n  // Form change handlers\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value);\n  }\n\n  // CRUD methods\n  const contactsToShow = persons.filter( (person) => person.name.toLowerCase().includes(newSearch.toLowerCase()));\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if (persons.some( (person) => person.name === newName)){\n      const userWantsToUpdate = window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`);\n      if (userWantsToUpdate) {\n        const person = persons.find( (person) => person.name === newName);\n        updatePerson(person.id, nameObject);\n      }\n    } else {\n      personService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n      setSuccessMessage(`${nameObject.name} was successfully added to the database.`)\n      setTimeout( () => {\n        setSuccessMessage(null)\n      }, 5000);\n    }\n  }\n\n  const updatePerson = (id, newObject) => {\n    const person = persons.find( (person) => person.id === id); \n    personService \n      .update(person.id, newObject)\n      .then( (returnedPerson) => {\n        const newPersonsArray = persons.map( (person) => person.id !== id ? person : returnedPerson);\n        setPersons(newPersonsArray);\n      })\n      .catch( (error) => {\n        setErrorMessage(`The person ${person.name} was already deleted from the server.`);\n        setPersons(persons.filter( (person) => person.id !== id));\n      })\n  }\n\n\n  const deletePerson = (id) => {\n    const index = persons.findIndex( (person) => person.id === id);\n    const person = persons.find( (person) => person.id === id);\n    const userWantsToDelete = window.confirm(`Do you really want to delete ${person.name}`)\n\n    if (userWantsToDelete) {\n      const personsCopy = [ ...persons ];\n      personsCopy.splice(index, 1);\n\n      personService\n        .deleteIt(id)\n        .then( () => {\n          setPersons(personsCopy);\n        })\n    } else {\n      return;\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter \n        search={newSearch} \n        handleSearchChange={handleSearchChange}\n      />\n\n      <h2>Add a New Contact</h2>\n      <Notification message={successMessage} type=\"success\"/>\n      <Notification message={errorMessage} type=\"error\" />\n      <PersonForm \n        add={addPerson}\n        name={newName}\n        number={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons \n        contactsToShow={contactsToShow}\n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}